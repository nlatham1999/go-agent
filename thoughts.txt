should there be a specific agentset type?

this would store the positions of each turtle so we can do list operations really fast

where should n-of functions be placed? At the model level? General (util) level? Or the Agentset level

AtPoints will always be use absolute coordinates since the caller will always be the observer

what if we stored the neighbors as pointers in each Patch

patch coordinates store the middle of the patch
 - minp(x)(y)cor being -15 means that the min coord is -15.5
 - maxp(x)(y)cor being 15 means that the max coord is 15.5
 - each patch goes +- .5

A turtles own variable for a breed has precedence over the general turtles own
for example if there is a starting variable of x = 30 for general and x = "test" for ants, a turtle of ants will have x = "test"

when changing the breed should the turtles own change?

change the linkedTurtles map in turtles to be flat
    - use a struct as a key

having colors be rbg, hsb, or a scale color is too complicated for  a backend, this is more frontend material
    - all colors should just be rgb

wrapping should have vertical and horizontal options

the only place the the heading and x,y should be changed should be in SetXY and setHeadingRadians
 - this will make it easier for moving tied turtles

should we store a list in the agentset structs as well?
    this would not improve things a lot since the List() funcs would still need to return a copy of the list instead of a reference to it

why have linkedTurtles and linkedTurtlesConnectedFrom?
 - linkedTurtles should only have turtles that have a path to them
 - so that means we need to store the directed links that are conecting back to the current turtle